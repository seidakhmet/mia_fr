version: '3.8'

networks:
  mia_fr_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "111.111.0.0/24"

x-base: &base-mia-fr
  image: mia-fr:latest
  build:
    context: .
    dockerfile: Dockerfile
  restart: always
  env_file:
    - .env
  environment: &base-environtment
    REDIS_HOST: "redis"
    REDIS_PORT: 6379
    DB_HOST: "db"
    DB_PORT: 5432
    RABBIT_HOST: "rabbitmq"
    RABBIT_PORT: 5672
  volumes:
    - ~/storages/mia_fr/files:/files
  depends_on:
    - db
    - redis
    - rabbitmq


services:
  db:
    image: postgres:15-bullseye
    container_name: mia_fr_db
    restart: always
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "15432:5432"
    volumes:
      - ~/databases/mia_fr/pg_db:/var/lib/postgresql/data/pgdata
    networks:
      - mia_fr_network
  redis:
    image: redis:7-bullseye
    container_name: mia_fr_redis
    restart: always
    ports:
      - "16379:6379"
    networks:
      - mia_fr_network
  rabbitmq:
    image: rabbitmq:3.11-alpine
    container_name: mia_fr_rabbitmq
    restart: always
    ports:
      - "15672:5672"
    networks:
      - mia_fr_network
  celery:
    <<: *base-mia-fr
    container_name: mia_fr_celery
    command: celery -A config.celery_app worker --queues=mia-fr --loglevel=INFO --concurrency=4
    environment:
      <<: *base-environtment
    networks:
      - mia_fr_network